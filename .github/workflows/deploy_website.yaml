name: Deploy Website

on:
  pull_request:
    types:
      - closed # Trigger when the PR is closed
    branches:
      - 'main' # Target branch is main
  workflow_dispatch:
    inputs:
      environment:
        description: 'The environment used as target'
        type: choice
        required: true
        default: prod
        options:
          - prod
      tenant:
        description: 'The tenant inherent to the site'
        type: string
        required: true

  # Allows external webhook trigger
  repository_dispatch:
    types:
      - webhook

# These permissions are needed to interact with GitHub's OIDC Token endpoint.
permissions:
  id-token: write
  contents: read

jobs:

  cd_deploy:
    name: Deploy to S3
    # Trigger when the PR is merged
    if: (github.event_name == 'pull_request' && github.event.pull_request.merged == true) || github.event_name == 'repository_dispatch'
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        environment: [ 'prod' ]

    environment: ${{ matrix.environment }}

    concurrency:
      group: ${{ github.workflow }}-${{ matrix.environment }}
      cancel-in-progress: false

    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      
      - name: Set Variabile CLOUDFRONT_DISTRIBUTION_ID
        id: set_cdn_distribution_id
        run: echo "cdn_id=$(if [[ "${{ inputs.tenant }}" == "send" ]]; then echo "${{ vars.CLOUDFRONT_DISTRIBUTION_ID_send }}"; elif [[ "${{ inputs.tenant }}" == "appio" ]]; then echo "${{ vars.CLOUDFRONT_DISTRIBUTION_ID_appio }}"; else echo "Tenant non valido";fi )" >> $GITHUB_OUTPUT
      
      - name: Set Variabile CDN_PATH
        id: set_cdn_path
        run: echo "cnd_path=$(if [[ "${{ inputs.tenant }}" == "send" ]]; then echo "${{ vars.CDN_PATH_send }}"; elif [[ "${{ inputs.tenant }}" == "appio" ]]; then echo "${{ vars.CDN_PATH_appio }}"; else echo "Tenant non valido";fi )" >> $GITHUB_OUTPUT      

      - name: Deploy website
        uses: ./.github/actions/deploy
        with:
          environment: ${{ matrix.environment }}
          iam_role: ${{ secrets.IAM_ROLE_DEPLOY_WEBSITE }}
          bucket: ${{ vars.S3_BUCKET_NAME }}
          cloudfront_distribution_id: ${{ steps.set_cdn_distribution_id.outputs.cdn_id }}
          strapi_api_token: ${{ secrets.STRAPI_TOKEN }}
          strapi_api_base_url: ${{ vars.STRAPI_URL }}
          cdn_path: ${{ steps.set_cdn_path.outputs.cdn_path }}
          tenant: ${{ inputs.tenant }}

  manual_deploy:
    name: Deploy to S3 (manual trigger) - (${{ inputs.environment }})
    if: github.event_name == 'workflow_dispatch'
    runs-on: 'ubuntu-latest'
    environment: ${{ inputs.environment }}

    concurrency:
      group: ${{ github.workflow }}-${{ inputs.environment }}
      cancel-in-progress: false

    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab

      - name: Set Variabile CLOUDFRONT_DISTRIBUTION_ID
        id: set_cdn_distribution_id
        run: echo "cdn_id=$(if [[ "${{ inputs.tenant }}" == "send" ]]; then echo "${{ vars.CLOUDFRONT_DISTRIBUTION_ID_send }}"; elif [[ "${{ inputs.tenant }}" == "appio" ]]; then echo "${{ vars.CLOUDFRONT_DISTRIBUTION_ID_appio }}"; else echo "Tenant non valido";fi )" >> $GITHUB_OUTPUT
      
      - name: Set Variabile CDN_PATH
        id: set_cdn_path
        run: echo "cnd_path=$(if [[ "${{ inputs.tenant }}" == "send" ]]; then echo "${{ vars.CDN_PATH_send }}"; elif [[ "${{ inputs.tenant }}" == "appio" ]]; then echo "${{ vars.CDN_PATH_appio }}"; else echo "Tenant non valido";fi )" >> $GITHUB_OUTPUT      

      - name: Deploy website
        uses: ./.github/actions/deploy
        with:
          environment: ${{ inputs.environment }}
          iam_role: ${{ secrets.IAM_ROLE_DEPLOY_WEBSITE }}
          bucket: ${{ vars.S3_BUCKET_NAME }}
          cloudfront_distribution_id: ${{ steps.set_cdn_distribution_id.outputs.cdn_id }}
          strapi_api_token: ${{ secrets.STRAPI_TOKEN }}
          strapi_api_base_url: ${{ vars.STRAPI_URL }}
          cdn_path: ${{ steps.set_cdn_path.outputs.cdn_path }}
          tenant: ${{ inputs.tenant }}
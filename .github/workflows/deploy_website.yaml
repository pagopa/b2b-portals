name: Deploy Website

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'The Tenant for which the static site will be built'
        type: choice
        required: true
        options:
          - send
          - appio
          - demo
          - firma
          - pdnd

  # Allows external webhook trigger
  repository_dispatch:
    types:
      - webhook

# These permissions are needed to interact with GitHub's OIDC Token endpoint.
permissions:
  id-token: write
  contents: read

jobs:

  cd_deploy:
    name: Deploy to S3
    # Trigger when the PR is merged
    if: (github.event_name == 'pull_request' && github.event.pull_request.merged == true) || github.event_name == 'repository_dispatch'
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        environment: [ 'send','appio','demo','firma','pdnd' ] # add new tenant after creating the relevant environment vars/secrets github

    environment: ${{ matrix.environment }}

    concurrency:
      group: ${{ github.workflow }}-${{ matrix.environment }}
      cancel-in-progress: false

    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      
      - name: Deploy website
        uses: ./.github/actions/deploy
        with:
          environment: ${{ matrix.environment }}
          iam_role: ${{ secrets.IAM_ROLE_DEPLOY_WEBSITE }}
          bucket: ${{ vars.S3_BUCKET_NAME }}
          cloudfront_distribution_id: ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}
          send_strapi_api_token: ${{ secrets.SEND_STRAPI_TOKEN }}
          send_strapi_api_base_url: ${{ vars.SEND_STRAPI_URL }}
          appio_strapi_api_token: ${{ secrets.APPIO_STRAPI_TOKEN }}
          appio_strapi_api_base_url: ${{ vars.APPIO_STRAPI_URL }}
          demo_strapi_api_token: ${{ secrets.DEMO_STRAPI_TOKEN }}
          demo_strapi_api_base_url: ${{ vars.DEMO_STRAPI_URL }}
          firma_strapi_api_token: ${{ secrets.FIRMA_STRAPI_TOKEN }}
          firma_strapi_api_base_url: ${{ vars.FIRMA_STRAPI_URL }}
          pdnd_strapi_api_token: ${{ secrets.PDND_STRAPI_TOKEN }}
          pdnd_strapi_api_base_url: ${{ vars.PDND_STRAPI_URL }}
          cdn_path: ${{ vars.CDN_PATH }}

  manual_deploy:
    name: Deploy to S3 (manual trigger) - (${{ inputs.environment }})
    if: github.event_name == 'workflow_dispatch'
    runs-on: 'ubuntu-latest'
    environment: ${{ inputs.environment }}

    concurrency:
      group: ${{ github.workflow }}-${{ inputs.environment }}
      cancel-in-progress: false

    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab

      - name: Deploy website
        uses: ./.github/actions/deploy
        with:
          environment: ${{ inputs.environment }}
          iam_role: ${{ secrets.IAM_ROLE_DEPLOY_WEBSITE }}
          bucket: ${{ vars.S3_BUCKET_NAME }}
          cloudfront_distribution_id: ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}
          send_strapi_api_token: ${{ secrets.SEND_STRAPI_TOKEN }}
          send_strapi_api_base_url: ${{ vars.SEND_STRAPI_URL }}
          appio_strapi_api_token: ${{ secrets.APPIO_STRAPI_TOKEN }}
          appio_strapi_api_base_url: ${{ vars.APPIO_STRAPI_URL }}
          demo_strapi_api_token: ${{ secrets.DEMO_STRAPI_TOKEN }}
          demo_strapi_api_base_url: ${{ vars.DEMO_STRAPI_URL }}
          firma_strapi_api_token: ${{ secrets.FIRMA_STRAPI_TOKEN }}
          firma_strapi_api_base_url: ${{ vars.FIRMA_STRAPI_URL }}
          pdnd_strapi_api_token: ${{ secrets.PDND_STRAPI_TOKEN }}
          pdnd_strapi_api_base_url: ${{ vars.PDND_STRAPI_URL }}
          cdn_path: ${{ vars.CDN_PATH }}
name: Deploy Website to Staging

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'The Tenant for which the static site will be built'
        type: choice
        required: true
        options:
          - send
          - appio
          - demo
          - interop

concurrency:
  group: s3-deploy-${{ inputs.environment }}
  cancel-in-progress: false

# These permissions are needed to interact with GitHub's OIDC Token endpoint.
permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy to S3 - (${{ inputs.environment }})
    runs-on: 'ubuntu-latest'
    environment: ${{ inputs.environment }}

    concurrency:
      group: ${{ github.workflow }}-${{ inputs.environment }}
      cancel-in-progress: false

    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab

      - name: Deploy website
        uses: ./.github/actions/deploy
        with:
          environment: ${{ inputs.environment }}
          iam_role: ${{ secrets.IAM_ROLE_DEPLOY_WEBSITE }}
          bucket: ${{ vars.S3_STAGING_BUCKET_NAME }}
          media_library_bucket: ${{ vars.STRAPI_MEDIA_LIBRARY_S3_BUCKET_NAME }}
          cloudfront_distribution_id: ${{ vars.CLOUDFRONT_STAGING_DISTRIBUTION_ID }}
          send_strapi_api_token: ${{ secrets.SEND_STRAPI_TOKEN }}
          send_strapi_api_base_url: ${{ vars.SEND_STRAPI_URL }}
          send_strapi_media_library: ${{ vars.SEND_STRAPI_MEDIA_LIBRARY_S3_BUCKET_NAME }}
          appio_strapi_api_token: ${{ secrets.APPIO_STRAPI_TOKEN }}
          appio_strapi_api_base_url: ${{ vars.APPIO_STRAPI_URL }}
          appio_strapi_media_library: ${{ vars.APPIO_STRAPI_MEDIA_LIBRARY_S3_BUCKET_NAME }}
          demo_strapi_api_token: ${{ secrets.DEMO_STRAPI_TOKEN }}
          demo_strapi_api_base_url: ${{ vars.DEMO_STRAPI_URL }}
          demo_strapi_media_library: ${{ vars.DEMO_STRAPI_MEDIA_LIBRARY_S3_BUCKET_NAME }}
          interop_strapi_api_token: ${{ secrets.INTEROP_STRAPI_TOKEN }}
          interop_strapi_api_base_url: ${{ vars.INTEROP_STRAPI_URL }}
          interop_strapi_media_library: ${{ vars.INTEROP_STRAPI_MEDIA_LIBRARY_S3_BUCKET_NAME }}
          cdn_path: ${{ vars.CDN_PATH }}
  
  notify:
    needs: deploy
    name: Notify of Workflow End - (${{ inputs.environment }})
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Call Strapi API
        shell: bash
        run: |
          curl -X POST "${{ vars.STRAPI_URL }}/static-deploy/notify-workflow-end" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.WORKFLOW_NOTIFICATIONS_BEARER_TOKEN }}" \
            -d '{"event": "staging-end"}'